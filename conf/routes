
GET  /              controllers.Assets.at(path="/public", file="app.html")

GET  /static/*file  controllers.Assets.versioned(path="/public", file: Asset)

POST /auth/sign-in  opentab.controllers.AuthController.signIn()       

POST /auth/sign-out opentab.controllers.AuthController.signOut()

GET  /auth/verifykey  opentab.controllers.AuthController.remoteVerifyKey()

GET  /auth/token  opentab.controllers.AuthController.getToken()

GET  /auth/token/verify opentab.controllers.AuthController.remoteVerifyToken()

########################################################################################################################
# Routes for the REST API controller
########################################################################################################################

GET  /api/routes.js  opentab.controllers.RESTController.jsRouter()

GET  /api/tabs  opentab.controllers.RESTController.getAllTabs()

GET /api/tabs/permissions  opentab.controllers.RESTController.getAllPermissions()

GET  /api/tab/:tabid  opentab.controllers.RESTController.getTab(tabid: Int)

GET  /api/tab/:tabid/permissions  opentab.controllers.RESTController.getPermissions(tabid: Int)

GET  /api/tab/:tabid/teams  opentab.controllers.RESTController.getAllTeams(tabid: Int)

GET  /api/tab/:tabid/delegations  opentab.controllers.RESTController.getAllDelegations(tabid: Int)

GET  /api/tab/:tabid/speakers  opentab.controllers.RESTController.getAllSpeakers(tabid: Int)

GET  /api/tab/:tabid/judges  opentab.controllers.RESTController.getAllJudges(tabid: Int)

GET  /api/tab/:tabid/rounds  opentab.controllers.RESTController.getRounds(tabid: Int)

GET  /api/tab/:tabid/round/:number  opentab.controllers.RESTController.getRound(tabid: Int, number: Int)

POST  /api/tab/:tabid/round  opentab.controllers.RESTController.addRound(tabid: Int)

DELETE  /api/tab/:tabid/round/:number  opentab.controllers.RESTController.deleteRound(tabid: Int, number: Int)

PATCH  /api/tab/:tabid/round/:number/lock  opentab.controllers.RESTController.lockRound(tabid: Int, number: Int)

PATCH  /api/tab/:tabid/round/:number/unlock  opentab.controllers.RESTController.unlockRound(tabid: Int, number: Int)

GET  /api/tab/:tabid/round/:number/draw/exists  opentab.controllers.RESTController.isDrawn(tabid: Int, number: Int)

GET  /api/tab/:tabid/round/:number/draw  opentab.controllers.RESTController.getDraw(tabid: Int, number: Int)

POST  /api/tab/:tabid/round/:number/draw  opentab.controllers.RESTController.setDraw(tabid: Int, number: Int)

GET  /api/tab/:tabid/generate-pairings/random  opentab.controllers.RESTController.getRandomPairings(tabid: Int)

GET  /api/team/:teamid  opentab.controllers.RESTController.getTeam(teamid: Int)

POST  /api/team  opentab.controllers.RESTController.createTeam()

DELETE  /api/team/:teamid  opentab.controllers.RESTController.deleteTeam(teamid: Int)

PATCH  /api/team/:teamid  opentab.controllers.RESTController.updateTeam(teamid: Int)

PATCH  /api/team/:teamid/toggle  opentab.controllers.RESTController.toggleTeam(teamid: Int)

GET  /api/team/:teamid/speakers  opentab.controllers.RESTController.getAllSpeakersOnTeam(teamid: Int)

GET  /api/speaker/:speakerid  opentab.controllers.RESTController.getSpeaker(speakerid: Int)

POST  /api/speaker  opentab.controllers.RESTController.createSpeaker()

DELETE  /api/speaker/:speakerid  opentab.controllers.RESTController.deleteSpeaker(speakerid: Int)

PATCH  /api/speaker/:speakerid  opentab.controllers.RESTController.updateSpeaker(speakerid: Int)

GET  /api/judge/:judgeid  opentab.controllers.RESTController.getJudge(judgeid: Int)

POST  /api/judge  opentab.controllers.RESTController.createJudge()

DELETE  /api/judge/:judgeid  opentab.controllers.RESTController.deleteJudge(judgeid: Int)

PATCH  /api/judge/:judgeid  opentab.controllers.RESTController.updateJudge(judgeid: Int)

PATCH  /api/judge/:judgeid/toggle  opentab.controllers.RESTController.toggleJudge(judgeid: Int)

GET  /api/judge/:judgeid/clashes  opentab.controllers.RESTController.getClashesForJudge(judgeid: Int)

POST  /api/judge/:judgeid/clash/:teamid  opentab.controllers.RESTController.setClash(judgeid: Int, teamid: Int, level: Int)

DELETE  /api/judge/:judgeid/clash/:teamid  opentab.controllers.RESTController.unsetClash(judgeid: Int, teamid: Int)            

########################################################################################################################
# ADMIN ROUTES
########################################################################################################################

GET  /api/internal/cache  opentab.controllers.RESTController.getCache()

DELETE  /api/internal/cache  opentab.controllers.RESTController.flushCache()

# GET  /api/internal/cache/size  opentab.controllers.RESTController.getCacheSize()
